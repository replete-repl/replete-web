["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$fipp.engine","~:imports",null,"~:requires",["^ ","~$s","~$clojure.string","^;","^;","~$deque","~$fipp.deque","^=","^="],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$serialize-node",["^ ","^7","~$fipp.engine/serialize-node","~:file","/Users/ray/.cljs/.aot_cache/1.10.520/B0835A6/fipp/engine.cljc","~:line",10,"~:column",1,"~:end-line",10,"~:end-column",25,"~:meta",["^ ","^C","/Users/ray/.cljs/.aot_cache/1.10.520/B0835A6/fipp/engine.cljc","^D",10,"^E",11,"^F",10,"^G",25],"~:tag","~$cljs.core/MultiFn"],"~$serialize",["^ ","~:protocol-inline",null,"^H",["^ ","^C","/Users/ray/.cljs/.aot_cache/1.10.520/B0835A6/fipp/engine.cljc","^D",12,"^E",7,"^F",12,"^G",16,"~:arglists",["~#list",["~$quote",["^N",[["~$doc"]]]]]],"^7","~$fipp.engine/serialize","^C","/Users/ray/.cljs/.aot_cache/1.10.520/B0835A6/fipp/engine.cljc","^G",16,"~:method-params",["^N",[["^P"]]],"~:protocol-impl",null,"~:arglists-meta",["^N",[null,null]],"^E",1,"~:variadic?",false,"^D",12,"~:ret-tag",["^6",["~$cljs.core/IVector","~$any","~$clj-nil"]],"^F",12,"~:max-fixed-arity",1,"~:fn-var",true,"^M",["^N",["^O",["^N",[["^P"]]]]]],"~$annotate-rights",["^ ","^L",null,"^H",["^ ","^C","/Users/ray/.cljs/.aot_cache/1.10.520/B0835A6/fipp/engine.cljc","^D",68,"^E",7,"^F",68,"^G",22,"^M",["^N",["^O",["^N",[["~$rf"]]]]],"~:doc","A transducer which annotates the right-side of nodes assuming a\n  hypothetical single-line formatting of the document. Groups and indentation\n  directives are temporarily assumed to be zero-width. These values are used\n  by subsequent passes to produce the final layout."],"^7","~$fipp.engine/annotate-rights","^C","/Users/ray/.cljs/.aot_cache/1.10.520/B0835A6/fipp/engine.cljc","^G",22,"^R",["^N",[["^11"]]],"^S",null,"^T",["^N",[null,null]],"^E",1,"^U",false,"^D",68,"^V","~$function","^F",68,"^Z",1,"^[",true,"^M",["^N",["^O",["^N",[["^11"]]]]],"^12","A transducer which annotates the right-side of nodes assuming a\n  hypothetical single-line formatting of the document. Groups and indentation\n  directives are temporarily assumed to be zero-width. These values are used\n  by subsequent passes to produce the final layout."],"~$update-right",["^ ","^L",null,"^H",["^ ","^C","/Users/ray/.cljs/.aot_cache/1.10.520/B0835A6/fipp/engine.cljc","^D",89,"^E",7,"^F",89,"^G",19,"^M",["^N",["^O",["^N",[["^<","~$f","~$&","~$args"]]]]],"~:top-fn",["^ ","^U",true,"~:fixed-arity",2,"^Z",2,"^R",[["^N",["^<","~$f","^16"]]],"^M",["^N",[["^<","~$f","~$&","^16"]]],"^T",["^N",[null]]]],"^7","~$fipp.engine/update-right","^C","/Users/ray/.cljs/.aot_cache/1.10.520/B0835A6/fipp/engine.cljc","^G",19,"^17",["^ ","^U",true,"^18",2,"^Z",2,"^R",[["^N",["^<","~$f","^16"]]],"^M",["^N",[["^<","~$f","~$&","^16"]]],"^T",["^N",[null]]],"^R",[["^N",["^<","~$f","^16"]]],"^S",null,"^18",2,"^T",["^N",[null]],"^E",1,"^U",true,"~:methods",[["^ ","^18",2,"^U",true,"^I","^X"]],"^D",89,"^V","^X","^F",89,"^Z",2,"^[",true,"^M",["^N",[["^<","~$f","~$&","^16"]]]],"~$annotate-begins",["^ ","^L",null,"^H",["^ ","^C","/Users/ray/.cljs/.aot_cache/1.10.520/B0835A6/fipp/engine.cljc","^D",92,"^E",7,"^F",92,"^G",22,"^M",["^N",["^O",["^N",[[["^ ","~:keys",["~$width"],"~:as","~$options"]]]]]],"^12","Given printing options, returns a transducer which annotate the right-side\n  of groups on their :begin nodes.  This includes the pruning algorithm which\n  will annotate some :begin nodes as being :too-far to the right without\n  calculating their exact sizes."],"^7","~$fipp.engine/annotate-begins","^C","/Users/ray/.cljs/.aot_cache/1.10.520/B0835A6/fipp/engine.cljc","^G",22,"^R",["^N",[["~$p__19028"]]],"^S",null,"^T",["^N",[null,null]],"^E",1,"^U",false,"^D",92,"^V","^14","^F",92,"^Z",1,"^[",true,"^M",["^N",["^O",["^N",[[["^ ","^1<",["^1="],"^1>","^1?"]]]]]],"^12","Given printing options, returns a transducer which annotate the right-side\n  of groups on their :begin nodes.  This includes the pruning algorithm which\n  will annotate some :begin nodes as being :too-far to the right without\n  calculating their exact sizes."],"~$format-nodes",["^ ","^L",null,"^H",["^ ","^C","/Users/ray/.cljs/.aot_cache/1.10.520/B0835A6/fipp/engine.cljc","^D",164,"^E",7,"^F",164,"^G",19,"^M",["^N",["^O",["^N",[[["^ ","^1<",["^1="],"^1>","^1?"]]]]]],"^12","Given printing options, returns a transducer which produces the fully\n  laid-out strings."],"^7","~$fipp.engine/format-nodes","^C","/Users/ray/.cljs/.aot_cache/1.10.520/B0835A6/fipp/engine.cljc","^G",19,"^R",["^N",[["~$p__19037"]]],"^S",null,"^T",["^N",[null,null]],"^E",1,"^U",false,"^D",164,"^V","^14","^F",164,"^Z",1,"^[",true,"^M",["^N",["^O",["^N",[[["^ ","^1<",["^1="],"^1>","^1?"]]]]]],"^12","Given printing options, returns a transducer which produces the fully\n  laid-out strings."],"~$pprint-document",["^ ","^L",null,"^H",["^ ","^C","/Users/ray/.cljs/.aot_cache/1.10.520/B0835A6/fipp/engine.cljc","^D",234,"^E",7,"^F",234,"^G",22,"^M",["^N",["^O",["^N",[["~$document"],["^1F","^1?"]]]]],"^17",["^ ","^U",false,"^18",2,"^Z",2,"^R",["^N",[["^1F"],["^1F","^1?"]]],"^M",["^N",[["^1F"],["^1F","^1?"]]],"^T",["^N",[null,null]]]],"^7","~$fipp.engine/pprint-document","^C","/Users/ray/.cljs/.aot_cache/1.10.520/B0835A6/fipp/engine.cljc","^G",22,"^17",["^ ","^U",false,"^18",2,"^Z",2,"^R",["^N",[["^1F"],["^1F","^1?"]]],"^M",["^N",[["^1F"],["^1F","^1?"]]],"^T",["^N",[null,null]]],"^R",["^N",[["^1F"],["^1F","^1?"]]],"^S",null,"^18",2,"^T",["^N",[null,null]],"^E",1,"^U",false,"^1:",[["^ ","^18",1,"^U",false,"^I","^X"],["^ ","^18",2,"^U",false,"^I","^Y"]],"^D",234,"^F",234,"^Z",2,"^[",true,"^M",["^N",[["^1F"],["^1F","^1?"]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:nest","~:align","~:outdent","~:group","~:else","~:offset","~:default","~:terminate","~:too-far","~:width","~:op","~:node","~:begin","~:break","~:nodes","^D","~:right","~:escaped","~:position","~:pass","~:end","~:hierarchy","~:inline","~:text","~:span"]],"~:order",["^24","^1R","^1V","^26","^1P","^1W","^22","^20","^27","^D","^25","^1S","^1Y","^1O","^1X","^23","^1L","^1Q","^1N","^1M","^1[","^1U","^21","^1Z","^1T"]],"^12","See: Oleg Kiselyov, Simon Peyton-Jones, and Amr Sabry\n  Lazy v. Yield: Incremental, Linear Pretty-printing"]